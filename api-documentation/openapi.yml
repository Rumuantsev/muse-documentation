{
  "openapi": "3.0.3",
  "info":
    {
      "version": "1.2",
      "title": "API cервиса корпоративных обсуждений «МУЗА»",
      "description":
        "API для взаимодействия клиентской и серверной части сервиса \n\n
        СТАТУСЫ:\n\n START - endpoint добавлен как запланированный\n\n READY_TO_DEV - endpoint готов к разработке\n\n REVIEW - endpoint разработан для одних функций, но требует доработки для других функций или более детальной проработки\n\n END - работа над endpoint окончена",
    },
  "servers":
    [{ "url": "http://127.0.0.1", "description": "Generated server url" }],
  "security": [{ "JWTAuth": [] }],
  "paths":
    {
      "/posts/{id}":
        {
          "get":
            {
              "tags": ["Посты"],
              "summary": "Получить пост по ID  REVIEW",
              "description": "Возвращает пост с указанным идентификатором.",
              "operationId": "getPostById",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "description": "ID поста",
                    "required": true,
                    "schema": { "type": "integer", "format": "int64" },
                    "example": 42,
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Пост найден",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PostDTO" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Пост не найден",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Неавторизован",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PostDTO" },
                            },
                        },
                    },
                },
              "security": [{ "bearerAuth": [] }],
            },
          "put":
            {
              "tags": ["Посты"],
              "summary": "Обновить пост  REVIEW",
              "description": "Обновляет содержимое поста, если текущий пользователь является его автором.",
              "operationId": "updatePost",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "description": "ID поста",
                    "required": true,
                    "schema": { "type": "integer", "format": "int64" },
                    "example": 42,
                  },
                ],
              "requestBody":
                {
                  "description": "Данные для обновления поста",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/UpdatePostRequest",
                            },
                          "examples":
                            {
                              "Пример запроса":
                                {
                                  "description": "Пример запроса",
                                  "value":
                                    {
                                      "title": "Обновленный заголовок",
                                      "content": "Новый текст",
                                    },
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "404":
                    {
                      "description": "Пост не найден",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "204": { "description": "Пост обновлен успешно" },
                  "400": { "description": "Некорректные данные запроса" },
                  "403": { "description": "Доступ запрещен" },
                },
              "security": [{ "bearerAuth": [] }],
            },
          "delete":
            {
              "tags": ["Посты"],
              "summary": "Удалить пост  REVIEW",
              "description": "Удаляет пост по идентификатору. Доступно только автору поста.",
              "operationId": "deletePost",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "description": "ID поста",
                    "required": true,
                    "schema": { "type": "integer", "format": "int64" },
                    "example": 42,
                  },
                ],
              "responses":
                {
                  "404":
                    {
                      "description": "Пост не найден",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "204": { "description": "Пост удален" },
                  "403": { "description": "Доступ запрещен" },
                },
              "security": [{ "bearerAuth": [] }],
            },
        },
      "/posts":
        {
          "get":
            {
              "tags": ["Посты"],
              "summary": "Получить список постов REVIEW",
              "description": "Возвращает пагинированный список постов. Можно указать строку поиска `query` или фильтровать по `parentId`.",
              "operationId": "getPosts",
              "parameters":
                [
                  {
                    "name": "query",
                    "in": "query",
                    "description": "Строка поиска по постам",
                    "required": false,
                    "schema": { "type": "string" },
                    "example": "Spring Boot",
                  },
                  {
                    "name": "parentId",
                    "in": "query",
                    "description": "ID родительского поста для получения ответов",
                    "required": false,
                    "schema": { "type": "integer", "format": "int64" },
                    "example": 42,
                  },
                  {
                    "name": "pageable",
                    "in": "query",
                    "description": "Параметры пагинации и сортировки",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                ],
              "responses":
                {
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "200":
                    {
                      "description": "Список постов получен успешно",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PostDTO" },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Неавторизован",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PagePostDTO" },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Доступ запрещен",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PagePostDTO" },
                            },
                        },
                    },
                },
              "security": [{ "bearerAuth": [] }],
            },
          "post":
            {
              "tags": ["Посты"],
              "summary": "Создать новый пост REVIEW",
              "description": "Создает новый пост от имени аутентифицированного пользователя.",
              "operationId": "createPost",
              "requestBody":
                {
                  "description": "Данные для создания поста",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/CreatePostRequest",
                            },
                          "examples":
                            {
                              "Пример запроса":
                                {
                                  "description": "Пример запроса",
                                  "value":
                                    {
                                      "title": "Мой первый пост",
                                      "content": "Текст поста...",
                                    },
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "201":
                    {
                      "description": "Пост успешно создан",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PostDTO" },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Некорректные данные запроса",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PostDTO" },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Неавторизован",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PostDTO" },
                            },
                        },
                    },
                },
              "security": [{ "bearerAuth": [] }],
            },
        },
      "/posts/{id}/votes":
        {
          "get":
            {
              "tags": ["Голоса"],
              "summary": "Получить голос за пост  REVIEW",
              "description": "Загружает голос авторизованного пользователя на указанный пост",
              "operationId": "getVote",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "integer", "format": "int64" },
                  },
                ],
              "responses":
                {
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/VoteDTO" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["Голоса"],
              "summary": "Голосовать за пост  REVIEW",
              "description": "Создает голос за пост от имени аутентифицированного пользователя",
              "operationId": "createVote",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "integer", "format": "int64" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "string",
                              "enum": ["POSITIVE", "NEGATIVE"],
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ErrorDetails" },
                            },
                        },
                    },
                  "200": { "description": "OK" },
                },
            },
        },
      "/tags":
        {
          "get":
            {
              "tags": ["Теги"],
              "summary": "Получить список тегов START",
              "description": "Возвращает список тегов с поддержкой поиска, фильтрации и пагинации.",
              "operationId": "getTags",
              "parameters":
                [
                  {
                    "name": "query",
                    "in": "query",
                    "description": "Поиск по имени тега",
                    "required": false,
                    "schema": { "type": "string", "example": "java" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Номер страницы (начиная с 0)",
                    "schema": { "type": "integer", "default": 0 },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Размер страницы (количество элементов)",
                    "schema": { "type": "integer", "default": 20 },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Сортировка (например: name, usageCount, createdAt)",
                    "schema":
                      { "type": "string", "example": "usageCount,desc" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Список тегов успешно получен",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    { "$ref": "#/components/schemas/TagDTO" },
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["Теги"],
              "summary": "Создать новый тег START",
              "operationId": "createTag",
              "requestBody":
                {
                  "required": true,
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/CreateTagRequest" },
                          "examples":
                            {
                              "example":
                                {
                                  "value":
                                    {
                                      "name": "spring",
                                      "description": "Фреймворк Spring для Java",
                                    },
                                },
                            },
                        },
                    },
                },
              "responses":
                {
                  "201":
                    {
                      "description": "Тег успешно создан",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/TagDTO" },
                            },
                        },
                    },
                  "400": { "description": "Некорректные данные" },
                  "409":
                    { "description": "Тег с таким названием уже существует" },
                },
            },
        },
      "/tags/{id}":
        {
          "get":
            {
              "tags": ["Теги"],
              "summary": "Получить тег по ID START",
              "operationId": "getTagById",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "integer" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Тег найден",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/TagDTO" },
                            },
                        },
                    },
                  "404": { "description": "Тег не найден" },
                },
            },
          "put":
            {
              "tags": ["Теги"],
              "summary": "Обновить тег START",
              "operationId": "updateTag",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "integer" },
                  },
                ],
              "requestBody":
                {
                  "required": true,
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/UpdateTagRequest" },
                        },
                    },
                },
              "responses":
                {
                  "204": { "description": "Тег обновлен" },
                  "404": { "description": "Тег не найден" },
                },
            },
          "delete":
            {
              "tags": ["Теги"],
              "summary": "Удалить тег START",
              "operationId": "deleteTag",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "integer" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "Тег удален" },
                  "404": { "description": "Тег не найден" },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          "ErrorDetails":
            {
              "type": "object",
              "properties":
                {
                  "statusCode": { "type": "integer", "format": "int32" },
                  "message": { "type": "string" },
                  "details": { "type": "string" },
                },
            },
          "UpdatePostRequest":
            {
              "type": "object",
              "properties":
                {
                  "title": { "type": "string" },
                  "body": { "type": "string" },
                  "answerId": { "type": "integer", "format": "int64" },
                },
            },
          "CreatePostRequest":
            {
              "type": "object",
              "properties":
                {
                  "title": { "type": "string" },
                  "body": { "type": "string" },
                  "postType":
                    { "type": "string", "enum": ["QUESTION", "ANSWER"] },
                  "parentId": { "type": "integer", "format": "int64" },
                },
            },
          "PostDTO":
            {
              "type": "object",
              "properties":
                {
                  "id": { "type": "integer", "format": "int64" },
                  "title": { "type": "string" },
                  "body": { "type": "string" },
                  "postType":
                    { "type": "string", "enum": ["QUESTION", "ANSWER"] },
                  "author": { "$ref": "#/components/schemas/UserDTO" },
                  "parentId": { "type": "integer", "format": "int64" },
                  "answerId": { "type": "integer", "format": "int64" },
                  "created": { "type": "string", "format": "date-time" },
                  "updated": { "type": "string", "format": "date-time" },
                  "score": { "type": "integer", "format": "int64" },
                  "answers_count": { "type": "integer", "format": "int64" },
                  "usersVote":
                    { "type": "string", "enum": ["POSITIVE", "NEGATIVE"] },
                },
            },
          "UserDTO":
            {
              "type": "object",
              "properties":
                {
                  "id": { "type": "integer", "format": "int64" },
                  "externalId": { "type": "integer", "format": "int64" },
                  "internalId": { "type": "string", "format": "uuid" },
                  "userType":
                    { "type": "string", "enum": ["EXTERNAL", "INTERNAL"] },
                  "name": { "type": "string" },
                },
            },
          "Pageable":
            {
              "type": "object",
              "properties":
                {
                  "page":
                    { "type": "integer", "format": "int32", "minimum": 0 },
                  "size":
                    { "type": "integer", "format": "int32", "minimum": 1 },
                  "sort": { "type": "array", "items": { "type": "string" } },
                },
            },
          "PagePostDTO":
            {
              "type": "object",
              "properties":
                {
                  "totalElements": { "type": "integer", "format": "int64" },
                  "totalPages": { "type": "integer", "format": "int32" },
                  "pageable": { "$ref": "#/components/schemas/PageableObject" },
                  "numberOfElements": { "type": "integer", "format": "int32" },
                  "size": { "type": "integer", "format": "int32" },
                  "content":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/PostDTO" },
                    },
                  "number": { "type": "integer", "format": "int32" },
                  "sort": { "$ref": "#/components/schemas/SortObject" },
                  "first": { "type": "boolean" },
                  "last": { "type": "boolean" },
                  "empty": { "type": "boolean" },
                },
            },
          "PageableObject":
            {
              "type": "object",
              "properties":
                {
                  "pageNumber": { "type": "integer", "format": "int32" },
                  "paged": { "type": "boolean" },
                  "pageSize": { "type": "integer", "format": "int32" },
                  "offset": { "type": "integer", "format": "int64" },
                  "sort": { "$ref": "#/components/schemas/SortObject" },
                  "unpaged": { "type": "boolean" },
                },
            },
          "SortObject":
            {
              "type": "object",
              "properties":
                {
                  "sorted": { "type": "boolean" },
                  "unsorted": { "type": "boolean" },
                  "empty": { "type": "boolean" },
                },
            },
          "VoteDTO":
            {
              "type": "object",
              "properties":
                {
                  "id": { "type": "integer", "format": "int64" },
                  "postId": { "type": "integer", "format": "int64" },
                  "created": { "type": "string", "format": "date-time" },
                  "type":
                    { "type": "string", "enum": ["POSITIVE", "NEGATIVE"] },
                },
            },
          "TagDTO":
            {
              "type": "object",
              "properties":
                {
                  "id": { "type": "integer", "example": 1 },
                  "name": { "type": "string", "example": "java" },
                  "description":
                    {
                      "type": "string",
                      "example": "Язык программирования Java",
                    },
                  "usageCount": { "type": "integer", "example": 124 },
                  "createdAt":
                    {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-08-10T12:00:00Z",
                    },
                },
            },
          "CreateTagRequest":
            {
              "type": "object",
              "required": ["name"],
              "properties":
                {
                  "name": { "type": "string", "example": "spring" },
                  "description":
                    {
                      "type": "string",
                      "example": "Фреймворк Spring для Java",
                    },
                },
            },
          "UpdateTagRequest":
            {
              "type": "object",
              "properties":
                {
                  "name": { "type": "string", "example": "spring-boot" },
                  "description":
                    {
                      "type": "string",
                      "example": "Подмодуль Spring для быстрой разработки",
                    },
                },
            },
        },
      "securitySchemes":
        {
          "JWTAuth":
            {
              "type": "http",
              "name": "JWTAuth",
              "scheme": "bearer",
              "bearerFormat": "JWT",
            },
        },
    },
}
